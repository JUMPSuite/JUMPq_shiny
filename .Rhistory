myCCList <- lapply(myCCList, getCovU,
beta=0.2,
tau=0.5)
pepAbundanceScore <-
quantifyPeptide(pepInfo=dataPrepro@peptides[13, c("pepId", "ccInd")],
ccList=myCCList, param=c(alphaH=0, betaH=0.2, muH=0.3,
tauH=0.2))
View(pepAbundanceScore)
scampiRes <-
quantifyProteins(scampiData=dataPrepro, ccList=myCCList,
paramList=list(LSE=c(alphaH=0, betaH=0.2, muH=0.3,
tauH=0.2)),
quantifyPeptides=FALSE)
names(scampiRes)
scampiRes
scampiRes@proteins
View(leptoSRMpeptides)
View(leptoSRMedgespp)
View(leptoSRMproteins)
protAbundanceScore <-
quantifyProtein(protInfo=dataPrepro@proteins[7, c("protId", "ccInd")],
ccList=myCCList, param=c(alphaH=0, betaH=0.2, muH=0.3,
tauH=0.2))[1]
protAbundanceScore
dataPrepro@proteins[7, c("protId", "ccInd")]
debug(quantifyProtein)
protAbundanceScore <-
+     quantifyProtein(protInfo=dataPrepro@proteins[7, c("protId", "ccInd")],
+                     ccList=myCCList, param=c(alphaH=0, betaH=0.2, muH=0.3,
+                                              tauH=0.2))[1]
quantifyProtein(protInfo=dataPrepro@proteins[7, c("protId", "ccInd")],
ccList=myCCList, param=c(alphaH=0, betaH=0.2, muH=0.3,
tauH=0.2))[1]
cc$pepObs
param["betaH"]
Gcu
scampiParam <- estimateModelParameters(method="all", ccList=myCCList,
peptides=dataPrepro@peptides,
numIter=10)
scampiParam
a = quantifyProtein(protInfo=dataPrepro@proteins[7, c("protId","ccInd")], ccList = myCCList, param = c(alphaH = 5.88, betaH = 0.6, muH = 0, tauH = 0.48)
)
a
undebug(quantifyProtein)
quantifyProtein
a = quantifyProtein(protInfo=dataPrepro@proteins[7, c("protId","ccInd")], ccList = myCCList, param = c(alphaH = 5.88, betaH = 0.6, muH = 0, tauH = 0.48)
a
a = quantifyProtein(protInfo=dataPrepro@proteins[7, c("protId","ccInd")], ccList = myCCList, param = c(alphaH = 5.88, betaH = 0.6, muH = 0, tauH = 0.48))
a
scampiParam <- estimateModelParameters(method="all", ccList=myCCList, peptides=dataPrepro@peptides, numIter=10)
rm(list = ls())
data("leptoSRM")
scampiOut <- runScampi(peptides=leptoSRMpeptides,
proteins=leptoSRMproteins,
edgespp=leptoSRMedgespp,
rescaling=FALSE, method="LSE")
scampiOut
show(scampiOut)
summary(scampiOut)
scampiOut@proteins
scampiOut@edgespp
library(protiq)
data("leptoSRM")
scampiOut <- runScampi(peptides=leptoSRMpeptides,
proteins=leptoSRMproteins,
edgespp=leptoSRMedgespp,
rescaling=FALSE, method="LSE")
summary(scampiOut)
library(protiq)
data("leptoSRM")
dataChecked <- checkInputData(scampiData=scampi(peptides=leptoSRMpeptides,
proteins=leptoSRMproteins,
edgespp=leptoSRMedgespp),
rescaling = FALSE)
tmpPrepro <- preprocessInputData(scampiData=dataChecked)
dataPrepro <- tmpPrepro[["dataPrepro"]]
myCCList <- tmpPrepro[["ccList"]]
rm(tmpPrepro)
myCCList <- lapply(myCCList, getCovU,
beta=0.2,
tau=0.5)
debug(quantifyProtein)
protAbundanceScore <-
quantifyProtein(protInfo=dataPrepro@proteins[7, c("protId", "ccInd")],
ccList=myCCList, param=c(alphaH=0, betaH=0.2, muH=0.3,
tauH=0.2))[1]
myCCList$distance
ccList
shiny::runApp('C:/Research/Projects/R_Shiny/jump_q')
runApp('C:/Research/Projects/R_Shiny/jump_q')
runApp('C:/Research/Projects/R_Shiny/jump_q')
runApp('C:/Research/Projects/R_Shiny/jump_q')
source('C:/Research/Projects/R_Shiny/jump_q/R/statTest.R')
shiny::runApp('C:/Research/Projects/R_Shiny/jump_q')
runApp('C:/Research/Projects/R_Shiny/jump_q')
runApp('C:/Research/Projects/R_Shiny/jump_q')
res
res[1,]
res[1,]
res[1,]
ggplot(data = res, aes(logfc, significance))
+ geom_point()
+ geom_points()
ggplot(data = res, aes(logfc, significance)) + geom_point()
xlab
ylab
runApp('C:/Research/Projects/R_Shiny/jump_q')
source('C:/Research/Projects/R_Shiny/jump_q/test_d3heatmaply.R')
install("d3heatmap")
install.packages("d3heatmap")
install.packages("d3heatmap")
source('C:/Research/Projects/R_Shiny/jump_q/test_d3heatmaply.R')
library(d3heatmap)
d3heatmap()
d3heatmap(mtcars)
d3heatmap(mtcars, scale = "column")
source('C:/Research/Projects/R_Shiny/jump_q/test_d3heatmaply.R')
source('C:/Research/Projects/R_Shiny/jump_q/test_d3heatmap.R')
mtcars
source('C:/Research/Projects/R_Shiny/jump_q/test_d3heatmap.R')
library(shiny); runApp('C:/Research/Projects/R_Shiny/jump_q/test_d3heatmap.R')
runApp('C:/Research/Projects/R_Shiny/jump_q/test_d3heatmap.R')
runApp('C:/Research/Projects/R_Shiny/jump_q')
runApp('C:/Research/Projects/R_Shiny/jump_q')
class(data)
class(mat)
mat[1,]
class(mtcars)
mtcars
mtcars[1,]
runApp('C:/Research/Projects/R_Shiny/jump_q')
mat[1,]
d3heatmap(mat)
d3heatmap(mat, labRow = NA)
d3heatmap(mat, labRow = F)
d3heatmap(mat, labRow = NULL)
graphics.off()
runApp('C:/Research/Projects/R_Shiny/jump_q')
library(plotly)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
source('~/test_plotly.R')
d
source('~/test_plotly.R')
plot_ly
carat
d
d$carat
source('~/test_plotly.R')
source('~/test_plotly.R')
runApp('C:/Research/Projects/R_Shiny/jump_q')
debugSource('C:/Research/Projects/SuffixArray/sa.R')
seq
seq[1]
class(seq)
substr(seq, 462590, 1)
substr(seq, 462590, 2)
substr(seq, 462590, 3)
nchar(seq)
substr(seq, 1, 3)
substr(seq, 462590, 3)
substr(seq, 462610, 3)
substr(seq, 46000, 3)
substr(seq, 1000, 1)
substr(seq, 100, 1)
substr(seq, 1, 1)
substr(seq, 3, 1)
substr(seq, 4, 1)
substr(seq, 462590, 462600)
loess()
matrix(rnorm, ncol = 3, nrow = 2)
matrix(rnorm(), ncol = 3, nrow = 2)
rnorm(3, 2)
rnorm(0, 1)
rnorm(0, 1)
rnorm(1, 1)
rnorm(1, 0)
rnorm(1, 0)
rnorm(1, 0)
rnorm(1, 0)
rnorm(1, 0)
rnorm(1, 0)
rnorm(10)
debugSource('C:/Research/Projects/11Collaborations/KunduLab/20181129/DEPs.R')
debugSource('C:/Research/Projects/11Collaborations/KunduLab/20181129/DEPs.R')
dir()
cos(0.2)
cos(c(0.1,0.2))
a = 0.2*pi*seq(0, 9)
a
cos(a)
sum(cos(a))
seq(0, pi)
seq(0, pi, n = 2501)
linspace(0, pi, n = 2501)
seq(0, pi, length.out= 2501)
a = seq(0, pi, length.out= 2501)
a[1:10]
a[2499:2501]
shiny::runApp('U:/Research/Projects/9Visualization/shiny/jump_q')
runApp('U:/Research/Projects/9Visualization/shiny/jump_q')
runApp('U:/Research/Projects/9Visualization/shiny/jump_q')
qnorm()
qnorm
qnorm(0.95, 0, 1)
qnorm(0.975, 0, 1)
a = NULL
for (i in 1:10000) {a = c(a, i)}
a = list()
for (i in 1:10000) {a = c(a, i)}
a
a = NULL
for (i in 1:10000) {a = c(a, i)}
a
source('~/test.R')
length(aP)
ppois
ppois(10, 1787 * 0.01)
pnorm
pnorm(1200, mean = 1020, sd = 50)
1 - pnorm(1200, mean = 1020, sd = 50)
ppois
ppois(3, lambda = 2.5 * 4)
ppois(10, lambda = 1787 * 0.01)
pbinom
pmultnom
pmultinom
pmultinomial
phyper(x, 13, 39, 5, lower.tail=TRUE)
phyper(1, 13, 39, 5, lower.tail=TRUE)
phyper(1, 13, 39, 5, lower.tail=FALSE)
qhyper
m = matrix(c(17, 21, 34, 5263), nrow = 2)
m
fisher.test(m)
phyper(17, 34, 21, 5263)
phyper(17, 34, 5350-21, 5263)
phyper
showMethods(phyper)
phyper(17, 34, 5350-21, 5263)
qhyper(17, 34, 5350-21, 5263)
phyper(17,38,5335-38,51)
1- phyper(17,38,5335-38,51)
dhyper(17,38,5335-38,51)
dhyper(0,38,5335-38,51)
dhyper(0:16,38,5335-38,51)
sum(dhyper(0:16,38,5335-38,51))
double(sum(dhyper(0:16,38,5335-38,51)))
float(sum(dhyper(0:16,38,5335-38,51)))
1 - sum(dhyper(0:16,38,5335-38,51))
a = sum(dhyper(0:16,38,5335-38,51))
a
a = dhyper(0:16,38,5335-38,51)
a
sum(a)
1 - sum(a)
cumsum(a)
1 - cumsum(a)
a
sum(a[1:5])
sum(a[1:6])
sum(a[1:7])
1 - sum(a[1:7])
1 - sum(a[1:8])
sum(a[1:7]) - sum(a[1:8])
sum(a[1:8]) - sum(a[1:7])
sum(a[1:6])
sum(a[1:7])
1-sum(a[1:6])
1 - sum(a[1:5])
1 - sum(a[1])
1 - sum(a[1:2])
1 - sum(a[1:3])
1 - sum(a[1:4])
1 - sum(a[1:5])
1 - sum(a[1:6])
1 - sum(a[1:7])
a[7]
dhyper(7,28,5573-28,51)
dhyper(0:6,28,5573-28,51)
sum(dhyper(0:6,28,5573-28,51))
1-sum(dhyper(0:6,28,5573-28,51))
library(devtools)
install_github("c-ruttkies/MetFragR/metfRag")
install.packages("rJava")
install_github("c-ruttkies/MetFragR/metfRag")
dir()
getwd()
library(limma)
library(MASS)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.5.1")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.7")
BiocManager::install("limma")
BiocManager::install("limma")
BiocManager::install("FNN")
getwd()
setwd("U:/")
setwd("C:")
setwd("U:")
dir()
setwd("U")
setwd("U:")
setwd("U:\")
setwd("U:/")
setwd("U:\Research")
setwd("U:/Research")
setwd("U:\\/Research")
setwd("U:\\Research")
install.packages("caTools")
library("gplots")
BiocManager::install("BRAIN")
library(BRAIN)
formula = list(C=4, H=7, N=1, O=4)
res = useBRAIN(formula)
res
res$isoDistr
res$isoDistr / (res$isoDistr[1] + res$isoDistr[2])
setwd("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q")
shiny::runApp()
runApp()
df
dfSample
source("preprocess.R")
entry
colInd
length(colInd)
runApp()
source("preprocess.R")
debugSource("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/preprocess.R")
log(c("NA", 29, 192), 2, na.rm=T)
log(c("NA", 2, 4, 2))
debugSource("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/preprocess.R")
runApp()
runApp()
df
log(df, 2)
source("preprocess.R")
log(df[, colInd], 2)
runApp()
apply
runApp()
runApp()
df
prcomp(t(df), center=T, scale=T, na.action=na.omit)
prcomp(t(na.omit(df)), center=T, scale=T)
prcomp(na.omit(t(df)), center=T, scale=T)
runApp()
runApp()
prcomp(na.omit(t(df)), center=T, scale=T)
runApp()
tt = t(df)
tt
size(tt)
dim(tt)
apply(tt, 1, "sd")
apply(tt, 1, "sd", na.rm=T)
runApp()
x
center
x
dim(x)
runApp()
df
x
df
runApp()
tt = na.omit(df)
tt
dim(tt)
tt
t(na.omit(df))
runApp()
runApp()
mat
mm = t(scale(t(mat), center = T, scale = T))
mm
min(mm)
nanmin(mm)
min(mm, na.rm=# Sat Aug 28 23:42:36 2021 ------------------------------
)
min(mm, na.rm=T)
runApp()
runApp()
runApp()
df
colInd
colnames(df)
df[, colInd]
log(df[, colInd], 2)
a = log(df[, colInd], 2, na.rm=T)
colInd
a = log(df[, colInd], 2, na.rm=T)
colInd
a = log(df[, colInd], 2)
debugSource("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/preprocess.R")
shiny::runApp()
subData
data
dim(data)
colnames(data)
samples
comparison
samples
colnames(data)
samples
comparison
samples
nSamples
samples
groups[[1]]
samples = c(NULL, groups[[1]])
samples
groups[[2]]
groups[[3]]
groups[[4]]
groups[[5]]
colnames(data)
runApp()
runApp()
runApp()
input$groups2
dfSample[[input$groups2]]
dfSample
subData2()
names(subData2())
runApp()
runApp()
library(RColorBrewer)
colVector = brewer.pal(n = 8, name = 'paired2')
colVector = brewer.pal(n = 8, name = 'Paired')
colVector
dfSample =read.table(input$metaFile1$datapath, sep="\t", header=T)
dfSample = read.table("sample_info.txt", sep="\t", header=T)
dir()
dfSample = read.table("sampleInfo.txt", sep="\t", header=T)
dfSample
df[["S_T"]]
dfSample[["S_T"]]
unique(dfSample[["S_T"]])
dfSample[["S_T"]].unique()
factor(dfSample[["S_T"]])
levels(dfSample[["S_T"]])
labels = dfSample["S_T"]
pal = brewer.pal(n = length(unique(labels)), name = "Paired")
list(unique(labels), c("red", "blue"))
col = setNames(unique(labels), c("red", "blue"))
unique(labels)
labels = dfSample[[input$S_T]]
labels = dfSample[["S_T"]]
labels
col = setNames(unique(labels), c("red", "blue"))
col
col$S
col = list(c("S" = "red", "T" = "blue"))
col
col2 = list(setNames(c("red", "blue"), unique(labels)))
col2
runApp()
runApp()
runApp()
runApp()
runif
df = data.frame()
df$pval = pval
pval = -log10(runif(1000))
log2fc = rnorm(1000, mean = 0, sd = 1)
df$pval = pval
pval
df
df = data.frame(pval = pval, log2fc = log2fc)
df
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
runApp()
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
min(pval)
max(pval)
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
runApp()
ymax
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
source("C:/Users/jcho/OneDrive - St. Jude Children's Research Hospital/UDrive/Research/Projects/9Visualization/shiny/jump_q/test.R")
runApp()
runApp()
